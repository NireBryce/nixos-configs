{
    // Place your nixos-configs workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
    // Placeholders with the same ids are connected.
    // Example:
    // "Print to console": {
    // 	"scope": "javascript,typescript",
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }
    "nix-templates-defaults": {
        "scope": "nix",
        "prefix": "nix-templates-defaults",
        "body": [
            "{",
            "    ...",
            "}:",
            " ",
            "{",
            "    imports = [",
            "        ",
            "    ];",
            "}"
        ],
        "description": "Create empty defaults.nix"
    },
    "nix-hm-pkg": {
        "scope": "nix",
        "prefix": "nix-templates-hm-pkg",
        "body": [
           "{ ... }:"    
        ,  "{"
        ,  "    description = \"\";"
        ,  "    flake.modules.homeManager.base ="
        ,  "    { pkgs, ... }:"
        ,  "    let packageList = with pkgs; ["
        ,  "        "
        ,  "    ];"
        ,  "    in"
        ,  "    {" 
        ,  "        home.packages = packageList;"
        ,  "    };"
        ,  "}"
        ],
        "description": "create new flake-parts home-manager package module", 
    },
    "nix-empty-config": {
        "scope": "nix",
        "prefix": "nix-templates-empty-config",
        "body": [
            "{",
            "    ...", 
            "}:",
            "    ", 
            "{",
            "    ",
            "}"
        ],
        "description": "create an empty nix system module",
    },

}

